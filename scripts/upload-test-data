#!/usr/bin/env python
"""
Kevin Murphy
keggsmurph21 at gmail dot com
"""

from typing import Optional

import os
import subprocess
import sys


def usage() -> None:
    print(
        f"""
usage: {sys.argv[0]}

    This script downloads and extracts tarballs from an AWS S3
    bucket into the ./test-data folder.  In order to run this
    script, the following environment variables must be set and
    exported:

     - AWS_ACCESS_KEY_ID
     - AWS_SECRET_ACCESS_KEY

    To set and export these variables, you can run the following
    command from the root of the project repository:

     $ source .env

    If that file does not exist on your system, please contact
    one of the project maintainers for a copy.
"""
    )
    sys.exit(1)


def hash_path(path: str) -> Optional[str]:
    if not os.path.exists(path):
        return None
    proc = subprocess.run(
        ["./scripts/hash-path", path], stdout=subprocess.PIPE, encoding="utf-8"
    )
    if proc.returncode:
        raise RuntimeError("Unable to hash path")
    return proc.stdout.strip()


if __name__ == "__main__":

    if os.environ.get("AWS_ACCESS_KEY_ID", None) is None:
        usage()
    if os.environ.get("AWS_SECRET_ACCESS_KEY", None) is None:
        usage()

    repo_root = os.path.realpath(os.path.join(os.path.dirname(sys.argv[0]), "..",))

    os.chdir(repo_root)
    print(hash_path("./test-data/example-dicom"))

"""
# see if we need to download anything
if [ -d ./test-data ]; then
    current_hash=$(./scripts/hash-path ./test-data)
    if [[ $current_hash == $MAGIC_HASH ]]; then
        echo "hash matches expected value, exiting!" >&2
        exit 0
    else
        echo "hash doesn't match expected value, pulling latest data ..." >&2
        rm -rf ./test-data
    fi
fi

mkdir ./test-data

# download the files using python AWS SDK
cat <<DOWNLOAD | python3

import boto3
import sys

BUCKET = "swatphonlab"
PREFIX = "ultratrace-test-data"

s3 = boto3.client("s3")

for dataset in "$DATASETS".split():
    tarball = f"{PREFIX}/{dataset}.tar.gz"
    print(
        f"downloading s3://{BUCKET}/{tarball} ...",
        file=sys.stderr,
    )
    s3.download_file(
        Bucket=BUCKET,
        Key=tarball,
        Filename=f"./test-data/{dataset}.tar.gz",
    )

DOWNLOAD

cd ./test-data

# extract tarballs
for dataset in $DATASETS; do
    echo "extracting ./$dataset.tar.gz ..." >&2
    tar xf "./$dataset.tar.gz"
    rm "./$dataset.tar.gz"
done

cd ..

echo "done!" >&2

# FIXME: Build up some more trivial test directories
"""
